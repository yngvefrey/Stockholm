{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","div","props","invert","Header","logo","Switch","Scene","width","height","perspective","Carousel","degree","Cell","rotateY","translateZ","imageURL","size","App","useState","setDegree","setInvert","scene","swipeHandler","useSwipeable","onSwipedLeft","deltaX","prevState","onSwipedRight","delta","preventDefaultTouchmoveEvent","trackTouch","trackMouse","defaultChecked","onChange","map","l","i","a","Math","tan","PI","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kLAAe,MAA0B,iC,OCMnCA,EAAUC,IAAOC,IAAV,mEAAGD,CAAH,uHASQ,SAAAE,GAAK,OAAIA,EAAMC,OAAS,EAAI,KAG3CC,EAASJ,IAAOC,IAAV,kEAAGD,CAAH,6HAOc,SAAAE,GAAK,OAAIA,EAAMG,QAInCC,EAASN,IAAOC,IAAV,kEAAGD,CAAH,oDAONO,EAAQP,IAAOC,IAAV,iEAAGD,CAAH,qJAEE,SAAAE,GAAK,OAAIA,EAAMM,SACd,SAAAN,GAAK,OAAIA,EAAMO,UACV,SAAAP,GAAK,OAAIA,EAAMQ,eAO5BC,EAAWX,IAAOC,IAAV,oEAAGD,CAAH,uIAKW,SAAAE,GAAK,OAAIA,EAAMU,UAIlCC,EAAOb,IAAOC,IAAV,gEAAGD,CAAH,2QAEG,SAAAE,GAAK,OAAIA,EAAMM,SACd,SAAAN,GAAK,OAAIA,EAAMO,UACJ,SAAAP,GAAK,OAAIA,EAAMY,WAA0B,SAAAZ,GAAK,OAAIA,EAAMa,cACrD,SAAAb,GAAK,OAAIA,EAAMc,YACpB,SAAAd,GAAK,OAAIA,EAAMe,QASvB,SAASC,IAAO,IAAD,EACAC,mBAAS,GADT,mBACrBP,EADqB,KACbQ,EADa,OAEAD,oBAAS,GAFT,mBAErBhB,EAFqB,KAEbkB,EAFa,KAGtBC,EAAQ,CAAEb,OAAQ,GAAID,MAAO,GAAIE,YAAa,KAU9Ca,EAAeC,uBAAa,CAChCC,aAAc,gBAAGC,EAAH,EAAGA,OAAH,OAAgBN,GAAU,SAAAO,GAAS,OAAIA,EAAYD,MACjEE,cAAe,gBAAGF,EAAH,EAAGA,OAAH,OAAgBN,GAAU,SAAAO,GAAS,OAAIA,EAAYD,MAClEG,MAAO,EAAGC,8BAA8B,EAAOC,YAAY,EAAMC,YAAY,IAK/E,OACE,eAACjC,EAAD,2BAAawB,GAAb,IAA2BpB,OAAQA,EAAnC,UACE,cAACC,EAAD,CAAQC,KAAMA,IACd,cAACC,EAAD,UACE,cAAC,IAAD,CAAQ2B,eAAgB9B,EAAQ+B,SANhB,kBAAMb,GAAU,SAAAM,GAAS,OAAKA,UAQhD,cAACpB,EAAD,2BAAWe,GAAX,aACE,cAACX,EAAD,CAAUC,OAAQA,EAAlB,SAxBQ,CACZ,iEACA,6FACA,qEACA,qEACA,qEACA,uEAmBauB,KAAI,SAACC,EAAGC,EAAGC,GAAP,OACT,cAACzB,EAAD,CAEEL,MAAOc,EAAMd,MACbC,OAAQa,EAAMb,OACdM,WAAaO,EAAMd,MAAQ,EAAK+B,KAAKC,IAAID,KAAKE,GAAKH,EAAEI,QACrD5B,QAAU,IAAMwB,EAAEI,OAAUL,EAC5BrB,SAAUoB,EACVnB,KAAa,IAANoB,GAAiB,IAANA,GAAWA,IAAMC,EAAEI,OAAS,EAAK,UAAY,SAN1DN,eCtGnB,IAYeO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACpC,EAAD,MAEFqC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a75c4368.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.02d25b58.svg\";","import { useState } from 'react'\nimport { useSwipeable } from 'react-swipeable'\nimport Toggle from 'react-styled-toggle'\nimport logo from './logo.svg'\nimport styled from 'styled-components/macro'\n\nconst Wrapper = styled.div`\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 0;\n    cursor: grabbing;\n    background-color: white;\n    filter: invert(${props => props.invert ? 1 : 0});\n`\n\nconst Header = styled.div`\n  position: fixed;\n  width: 200px;\n  height: 129px;\n  top: 10px;\n  left: 10px;\n  z-index: 0;\n  background-image: url(${props => props.logo});\n  background-size: contain;\n`\n\nconst Switch = styled.div`\n  position: fixed;\n  top: 10px;\n  right: 10px;\n  z-index: 10;\n`\n\nconst Scene = styled.div`\n    position: absolute;\n    width: ${props => props.width}vw;\n    height: ${props => props.height}vh;\n    perspective: ${props => props.perspective}px;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    transition: all 1000ms ease-in-out;\n`\n\nconst Carousel = styled.div`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    transform-style: preserve-3d;\n    transform: rotateY(${props => props.degree}deg);\n\t\ttransition: all 1000ms ease-in-out;\n`\n\nconst Cell = styled.div`\n    position: absolute;\n    width: ${props => props.width}vw;\n    height: ${props => props.height}vh;\n    transform: rotateY(${props => props.rotateY}deg) translateZ(${props => props.translateZ}vw);\n    background-image: url(${props => props.imageURL});\n    background-size: ${props => props.size};\n    background-repeat: no-repeat;\n    background-position: center;\n    overflow: hidden;\n    border-width: 1px;\n    border-style: solid;\n    border-color: #e5e7eb;\n`\n\nexport default function App() {\n  const [degree, setDegree] = useState(0)\n  const [invert, setInvert] = useState(false)\n  const scene = { height: 30, width: 40, perspective: 5000 }\n  const links = [\n    'https://crudcarouselapp.s3.eu-central-1.amazonaws.com/pixlr-bg-result+(2).png',\n    'https://crudcarouselapp.s3.eu-central-1.amazonaws.com/67216aed87816a4cae60df0e6c1e02d3.gif',\n    'https://crudcarouselapp.s3.eu-central-1.amazonaws.com/00000004.png',\n    'https://crudcarouselapp.s3.eu-central-1.amazonaws.com/00000005.png',\n    'https://crudcarouselapp.s3.eu-central-1.amazonaws.com/00000003.gif',\n    'https://crudcarouselapp.s3.eu-central-1.amazonaws.com/1615464000408',\n  ]\n\n  const swipeHandler = useSwipeable({\n    onSwipedLeft: ({ deltaX }) => setDegree(prevState => prevState + deltaX),\n    onSwipedRight: ({ deltaX }) => setDegree(prevState => prevState - deltaX),\n    delta: 2, preventDefaultTouchmoveEvent: false, trackTouch: true, trackMouse: true\n  })\n\n  const invertHandler = () => setInvert(prevState => !prevState)\n\n  return (\n    <Wrapper {...swipeHandler} invert={invert}>\n      <Header logo={logo} />\n      <Switch>\n        <Toggle defaultChecked={invert} onChange={invertHandler} />\n      </Switch>\n      <Scene {...scene}>\n        <Carousel degree={degree}>\n          {links.map((l, i, a) => (\n            <Cell\n              key={l}\n              width={scene.width}\n              height={scene.height}\n              translateZ={(scene.width / 2) / Math.tan(Math.PI / a.length)}\n              rotateY={(360 / a.length) * i}\n              imageURL={l}\n              size={(i === 0 || i === 1 || i === a.length - 1) ? 'contain' : 'cover'}\n            />\n          ))}\n        </Carousel>\n      </Scene>\n    </Wrapper>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}
